//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Inputs/LazyDoggoInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @LazyDoggoInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @LazyDoggoInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""LazyDoggoInputs"",
    ""maps"": [
        {
            ""name"": ""PcAndConsole"",
            ""id"": ""fad6a35a-f646-4a74-83c6-aeab3c865772"",
            ""actions"": [
                {
                    ""name"": ""UpVertical"",
                    ""type"": ""Button"",
                    ""id"": ""48fbeefd-c1a8-44ed-a555-7ddc60cd8e24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownVertical"",
                    ""type"": ""Button"",
                    ""id"": ""464531a6-b9d8-4259-a39a-55a8708d0c43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpHorizontal"",
                    ""type"": ""Button"",
                    ""id"": ""2ea045d7-e244-446b-8efd-25aa81c06c23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownHorizontal"",
                    ""type"": ""Button"",
                    ""id"": ""ddb6a383-1a56-4455-ac68-2eec3f4d05da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EscapeButton"",
                    ""type"": ""Button"",
                    ""id"": ""4a328fc4-b12e-413a-84aa-2d64c9f224cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f81d3818-8105-4f1b-845c-cda6f6df1843"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9c34e2b-34d6-4e24-bdb7-de2c1fe82625"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4f389f0-d420-43c2-8e4d-8f0267e00de9"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73917e1a-88db-4f30-a73b-0775bd60c553"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79430dcf-0870-4107-8f7c-18e5150dc0fa"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68e1a1e3-4856-41ed-b1ff-41a7e346701a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9350a4f3-83f7-4962-b1c9-743f24a6661f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97ab55a0-7d30-4517-9836-eafa099a97cd"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d25b7853-64d5-48da-8844-2f199f874493"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""630aa8aa-d15e-451e-a164-a3a475c98d73"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c0ae799-8410-4990-a922-3f206845ec35"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c1d183c-0cad-4028-b02f-68c8a6c36f12"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""UpHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46a649b4-99e7-43c1-9c27-ada669e6363b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4aac62f9-63cd-491c-b672-722e3992e440"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84cab34a-3d8c-4581-92ba-1d502869e614"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ba2a073-96cb-4614-853f-7c516f02e9f9"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MainControllScheme"",
                    ""action"": ""DownHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b06e2e4-3903-4119-98ac-768c81cba8ee"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscapeButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22076243-dca7-47fb-ae09-cfc751bebe38"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscapeButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MainControllScheme"",
            ""bindingGroup"": ""MainControllScheme"",
            ""devices"": []
        }
    ]
}");
        // PcAndConsole
        m_PcAndConsole = asset.FindActionMap("PcAndConsole", throwIfNotFound: true);
        m_PcAndConsole_UpVertical = m_PcAndConsole.FindAction("UpVertical", throwIfNotFound: true);
        m_PcAndConsole_DownVertical = m_PcAndConsole.FindAction("DownVertical", throwIfNotFound: true);
        m_PcAndConsole_UpHorizontal = m_PcAndConsole.FindAction("UpHorizontal", throwIfNotFound: true);
        m_PcAndConsole_DownHorizontal = m_PcAndConsole.FindAction("DownHorizontal", throwIfNotFound: true);
        m_PcAndConsole_EscapeButton = m_PcAndConsole.FindAction("EscapeButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PcAndConsole
    private readonly InputActionMap m_PcAndConsole;
    private IPcAndConsoleActions m_PcAndConsoleActionsCallbackInterface;
    private readonly InputAction m_PcAndConsole_UpVertical;
    private readonly InputAction m_PcAndConsole_DownVertical;
    private readonly InputAction m_PcAndConsole_UpHorizontal;
    private readonly InputAction m_PcAndConsole_DownHorizontal;
    private readonly InputAction m_PcAndConsole_EscapeButton;
    public struct PcAndConsoleActions
    {
        private @LazyDoggoInputs m_Wrapper;
        public PcAndConsoleActions(@LazyDoggoInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @UpVertical => m_Wrapper.m_PcAndConsole_UpVertical;
        public InputAction @DownVertical => m_Wrapper.m_PcAndConsole_DownVertical;
        public InputAction @UpHorizontal => m_Wrapper.m_PcAndConsole_UpHorizontal;
        public InputAction @DownHorizontal => m_Wrapper.m_PcAndConsole_DownHorizontal;
        public InputAction @EscapeButton => m_Wrapper.m_PcAndConsole_EscapeButton;
        public InputActionMap Get() { return m_Wrapper.m_PcAndConsole; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PcAndConsoleActions set) { return set.Get(); }
        public void SetCallbacks(IPcAndConsoleActions instance)
        {
            if (m_Wrapper.m_PcAndConsoleActionsCallbackInterface != null)
            {
                @UpVertical.started -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpVertical;
                @UpVertical.performed -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpVertical;
                @UpVertical.canceled -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpVertical;
                @DownVertical.started -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownVertical;
                @DownVertical.performed -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownVertical;
                @DownVertical.canceled -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownVertical;
                @UpHorizontal.started -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpHorizontal;
                @UpHorizontal.performed -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpHorizontal;
                @UpHorizontal.canceled -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnUpHorizontal;
                @DownHorizontal.started -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownHorizontal;
                @DownHorizontal.performed -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownHorizontal;
                @DownHorizontal.canceled -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnDownHorizontal;
                @EscapeButton.started -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnEscapeButton;
                @EscapeButton.performed -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnEscapeButton;
                @EscapeButton.canceled -= m_Wrapper.m_PcAndConsoleActionsCallbackInterface.OnEscapeButton;
            }
            m_Wrapper.m_PcAndConsoleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @UpVertical.started += instance.OnUpVertical;
                @UpVertical.performed += instance.OnUpVertical;
                @UpVertical.canceled += instance.OnUpVertical;
                @DownVertical.started += instance.OnDownVertical;
                @DownVertical.performed += instance.OnDownVertical;
                @DownVertical.canceled += instance.OnDownVertical;
                @UpHorizontal.started += instance.OnUpHorizontal;
                @UpHorizontal.performed += instance.OnUpHorizontal;
                @UpHorizontal.canceled += instance.OnUpHorizontal;
                @DownHorizontal.started += instance.OnDownHorizontal;
                @DownHorizontal.performed += instance.OnDownHorizontal;
                @DownHorizontal.canceled += instance.OnDownHorizontal;
                @EscapeButton.started += instance.OnEscapeButton;
                @EscapeButton.performed += instance.OnEscapeButton;
                @EscapeButton.canceled += instance.OnEscapeButton;
            }
        }
    }
    public PcAndConsoleActions @PcAndConsole => new PcAndConsoleActions(this);
    private int m_MainControllSchemeSchemeIndex = -1;
    public InputControlScheme MainControllSchemeScheme
    {
        get
        {
            if (m_MainControllSchemeSchemeIndex == -1) m_MainControllSchemeSchemeIndex = asset.FindControlSchemeIndex("MainControllScheme");
            return asset.controlSchemes[m_MainControllSchemeSchemeIndex];
        }
    }
    public interface IPcAndConsoleActions
    {
        void OnUpVertical(InputAction.CallbackContext context);
        void OnDownVertical(InputAction.CallbackContext context);
        void OnUpHorizontal(InputAction.CallbackContext context);
        void OnDownHorizontal(InputAction.CallbackContext context);
        void OnEscapeButton(InputAction.CallbackContext context);
    }
}
